#"JSON": lambda size, precision, scale: f"VARCHAR2({size})",
# #"JSONB": lambda size, precision, scale: f"VARCHAR2({size})",


postgres_to_oracle_mapping = {
    "SMALLINT": "NUMBER(5,0)",
    "INTEGER": "NUMBER(10,0)",
    "BIGINT": "NUMBER(19,0)",
    "NUMERIC": lambda size, precision, scale: f"NUMBER({precision},{scale})",
    "REAL": "FLOAT",
    "DOUBLE PRECISION": "DOUBLE PRECISION",
    "CHARACTER": lambda size, precision, scale: f"CHAR({size})",
    "VARCHAR": lambda size, precision, scale: f"VARCHAR2({size})",
    "TEXT": "CLOB",
    "BYTEA": "BLOB",
    "BIT": "RAW(1)",
    "BIT VARYING": lambda size, precision, scale: f"RAW({size})",
    "DATE": "DATE",
    "TIME": "TIMESTAMP",
    "TIMESTAMP": "TIMESTAMP",
    "BOOLEAN": "NUMBER(1)",
    "BOOL": "CHAR(1)",
    "UUID": "RAW(36)",
    "CHAR": lambda size, precision, scale: f"CHARACTER({size})",
    "CHARACTER VARYING": lambda size, precision, scale: f"VARCHAR2({size})",
    "DECIMAL": lambda size, precision, scale: f"NUMBER({precision},{scale})",
    "DEC": lambda size, precision, scale: f"NUMBER({precision},{scale})",
    "FLOAT4": "BINARY_FLOAT",
    "FLOAT8": "BINARY_DOUBLE",
    "INT4": "NUMBER(10)",
    "INT2": "NUMBER(5)",
    "INT8": "NUMBER(20)",
    "VARBIT": lambda size, precision, scale: f"RAW({size})",
    "XML": "XMLTYPE",
    "TIME WITHOUT TIME ZONE": "DATE",
    "TIMESTAMP WITHOUT TIME ZONE": "TIMESTAMP",
}
postgres_to_mysql_mapping = {
    "SMALLINT": "SMALLINT",
    "INTEGER": "INT",
    "BIGINT": "BIGINT",
    "DECIMAL": lambda size, precision, scale: f"DECIMAL({precision}, {scale})",
    "NUMERIC": lambda size, precision, scale: f"DECIMAL({precision}, {scale})",
    "REAL": "FLOAT",
    "DOUBLE PRECISION": "DOUBLE",
    "CHAR": lambda size, precision, scale: f"CHAR({size})",
    "CHARACTER": lambda size, precision, scale: f"CHAR({size})",
    "VARCHAR": lambda size, precision, scale: f"VARCHAR({size})",
    "TEXT": "TEXT",
    "BYTEA": "BLOB",
    "BIT": "BIT",
    "VARBIT": lambda size, precision, scale: f"BIT({size})",
    "BIT VARYING": "BLOB",
    "DATE": "DATE",
    "TIME": "TIME",
    "TIMESTAMP": "DATETIME",
    "BOOLEAN": "TINYINT",
    "UUID": "CHAR(36)",
    "POINT": "POINT",
    "JSONB": "JSON",
    "JSON": "LONGTEXT",
    "TSVECTOR": "LONGTEXT",
    "TSQUERY": "LONGTEXT",
    "CIDR": "VARCHAR(43)",
    "MACADDR": "VARCHAR(17)",
    "INET": "VARBINARY(43)",
    "FLOAT4": "FLOAT",
    "FLOAT8": "DOUBLE",
    "CHARACTER VARYING": lambda size, precision, scale: f"VARCHAR({size})",
    "INT ": "INT",
    "XML": "LONGTEXT",
    "PATH": "LINESTRING",
    "POLYGON": "POLYGON",
    "BOX": "POPLYGON",
    "TIME WITHOUT TIME ZONE": "TIME",
    "TIMESTAMP WITHOUT TIME ZONE": "DATETIME",

}
postgres_to_mssql_mapping = {
    "INTEGER": "INT",
    "SMALLINT": "SMALLINT",
    "NUMERIC": lambda size, precision, scale: f"NUMERIC({precision}, {scale})",
    "REAL": "REAL",
    "DECIMAL": lambda size, precision, scale: f"NUMERIC({precision}, {scale})",
    "FLOAT4": "REAL",
    "DOUBLE PRECISION": "FLOAT",
    "FLOAT8": "FLOAT",
    "CHARACTER VARYING": lambda size, precision, scale: f"VARCHAR({size})",
    "VARCHAR": lambda size, precision, scale: f"VARCHAR({size})",
    "TEXT": "NVARCHAR(MAX)",
    "CHARACTER": lambda size, precision, scale: f"CHAR({size})",
    "CHAR": lambda size, precision, scale: f"CHAR({size})",
    "BYTEA": "VARBINARY(MAX)",
    "DATE": "DATE",
    "TIMESTAMP": "DATETIME2",
    "TIMESTAMPTZ": "DATETIMEOFFSET",
    "INTERVAL": lambda size, precision, scale: f"VARCHAR({size})",
    "TIME": "TIME",
    "TIMETZ": "DATETIME2",
    "BOOLEAN": "BIT",
    "UUID": "UNIQUEIDENTIFIER",
    "JSON": "NVARCHAR(MAX)",
    "JSONB": "NVARCHAR(MAX)",
    "MONEY": "MONEY",
    "BIT": "BIT",
    "BIGINT": "BIGINT",
    "BIT VARYING": lambda size, precision, scale: f"VARBINARY({size})",
    "TIME WITHOUT TIME ZONE": "TIME",
    "TIMESTAMP WITHOUT TIME ZONE": "DATETIME2",
}
postgres_to_db2_mapping = {
    "INTEGER": "INTEGER",
    "SMALLINT": "SMALLINT",
    "BIGINT": "BIGINT",
    "NUMERIC": lambda size, precision, scale: f"DECIMAL({precision}, {scale})",
    "DECIMAL": lambda size, precision, scale: f"DECIMAL({precision}, {scale})",
    "REAL": "REAL",
    "DOUBLE PRECISION": "DOUBLE",
    "CHARACTER VARYING": lambda size, precision, scale: f"VARCHAR({size})",
    "VARCHAR": lambda size, precision, scale: f"VARCHAR({size})",
    "TEXT": "CLOB",
    "CHAR": lambda size, precision, scale: f"CHAR({size})",
    "CHARACTER": lambda size, precision, scale: f"CHAR({size})",
    "BIT VARYING": lambda size, precision, scale: f"VARBINARY({size})",
    "BYTEA": "BLOB",
    "DATE": "DATE",
    "TIMESTAMP": "TIMESTAMP",
    "TIME": "TIME",
    "BOOLEAN": "SMALLINT",
    "UUID": "CHAR(36)",
    "JSON": lambda size, precision, scale: f"VARCHAR({size})",
    "JSONB": lambda size, precision, scale: f"VARCHAR({size})",
    "BIT": lambda size, precision, scale: f"CHAR({size})",
    "VARBIT": lambda size, precision, scale: f"VARBINARY({size})",
    "INTERVAL": lambda size, precision, scale: f"VARCHAR({size})",
    "TIME WITHOUT TIME ZONE": "TIME",
    "TIMESTAMP WITHOUT TIME ZONE": "TIMESTAMP",
}
